//@version=6
indicator("Alt-Market Regime v3.1  (TOTAL3 * OTHERS.D / ETHBTC)  + Divergences  + RSI(Gaussian) OB/OS",
     overlay=false, max_labels_count=500, max_lines_count=500)

//========================= Inputs =========================
src_tf_in   = input.timeframe("12H", "Source timeframe (symbols)")
lenFast     = input.int(55,  "WMA Fast",  minval=1)
lenSlow     = input.int(200, "WMA Slow",  minval=2)
smoothK     = input.int(3,   "Smoothing (WMA on ratio)", minval=1)

ratioClr    = input.color(color.white,  "Color: Ratio line")
fastClr     = input.color(color.orange, "Color: WMA Fast")
slowClr     = input.color(color.yellow, "Color: WMA Slow")

useBg       = input.bool(true, "Show background shading")
bgOnClr     = input.color(color.new(color.teal, 0),   "BG: Risk-ON")
bgOffClr    = input.color(color.new(color.black, 0),  "BG: Risk-OFF")
transpBg    = input.int(82, "BG transparency (0..100)", minval=0, maxval=100)

showMarks   = input.bool(true, "Show regime/momentum markers")
markSize    = input.string("small", "Marker size", options=["tiny","small","normal","large"])
regUpClr    = input.color(color.green,  "Marker: Regime UP")
regDnClr    = input.color(color.red,    "Marker: Regime DOWN")
impUpClr    = input.color(color.teal,   "Marker: Momentum UP")
impDnClr    = input.color(color.purple, "Marker: Momentum DOWN")

// Divergences
showDiv        = input.bool(true,  "Show divergences (price vs ratio)")
divLeftRight   = input.int(5,      "Pivot left/right (bars)", minval=1, maxval=50)
bullDivColor   = input.color(color.new(color.teal,    0), "Bullish divergence color")
bearDivColor   = input.color(color.new(color.fuchsia, 0), "Bearish divergence color")
divLineWidth   = input.int(2,      "Divergence line width", minval=1, maxval=5)
showDivLabels  = input.bool(true,  "Show divergence labels")
alertsOnBarClose = input.bool(true, "Divergence alerts only on bar close")

// RSI(Gaussian) OB/OS on price pivots
krs_enable  = input.bool(true,  "Show RSI(Gaussian) OB/OS on price")
krs_len     = input.int(14,     "RSI length", minval=1)
krs_kernelN = input.int(11,     "Gaussian window (N)", minval=3, maxval=200)
krs_sigma   = input.float(2.71828, "Gaussian sigma", minval=0.1, step=0.01)
krs_OB      = input.int(70,     "RSI OB level", minval=50, maxval=100)
krs_OS      = input.int(30,     "RSI OS level", minval=0,  maxval=50)
pivotLR     = input.int(11,     "Price pivot L/R for OB/OS marks", minval=1, maxval=50)
colOB       = input.color(color.new(color.fuchsia,  0), "Color: RSI OB mark")
colOS       = input.color(color.new(color.aqua,     0), "Color: RSI OS mark")

//========================= Helpers =========================
f_norm_tf(tf) =>
    string out = tf
    out := tf == "12H" ? "720" :
           tf == "8H"  ? "480" :
           tf == "6H"  ? "360" :
           tf == "4H"  ? "240" :
           tf == "3H"  ? "180" :
           tf == "2H"  ? "120" :
           tf == "1H"  ?  "60" : tf
    out

src_tf = f_norm_tf(src_tf_in)

//========================= Data (security) =========================
total3  = request.security("CRYPTOCAP:TOTAL3",   src_tf, close, barmerge.gaps_off, barmerge.lookahead_off)
othersD = request.security("CRYPTOCAP:OTHERS.D", src_tf, close, barmerge.gaps_off, barmerge.lookahead_off)
ethbtc  = request.security("BINANCE:ETHBTC",     src_tf, close, barmerge.gaps_off, barmerge.lookahead_off)

//========================= Ratio & logic =========================
ratio_raw = ethbtc != 0 ? (total3 * othersD) / ethbtc : na
base      = ta.wma(ratio_raw, lenSlow)
ratioN    = base != 0 ? (ratio_raw / base - 1) * 100 : na
ratio     = ta.wma(ratioN, smoothK)

wmaFast   = ta.wma(ratio, lenFast)
wmaSlow   = ta.wma(ratio, lenSlow)

riskOn      = ratio > wmaSlow
riskOff     = ratio < wmaSlow
impulseUp   = ta.crossover(ratio, wmaFast)
impulseDown = ta.crossunder(ratio, wmaFast)
regimeUp    = ta.crossover(ratio, wmaSlow)
regimeDown  = ta.crossunder(ratio, wmaSlow)

//========================= Plots =========================
plot(ratio,   "Alt-Market Ratio %", color=ratioClr, linewidth=2)
plot(wmaFast, "WMA Fast",           color=fastClr)
plot(wmaSlow, "WMA Slow",           color=slowClr)

// Маркеры размеров по выбору (исправлено)
isTiny   = markSize == "tiny"
isSmall  = markSize == "small"
isNormal = markSize == "normal"
isLarge  = markSize == "large"

// Regime UP
plotshape(showMarks and regimeUp and isTiny,   title="Regime UP",   style=shape.triangleup,   location=location.bottom, color=regUpClr, size=size.tiny)
plotshape(showMarks and regimeUp and isSmall,  title="Regime UP",   style=shape.triangleup,   location=location.bottom, color=regUpClr, size=size.small)
plotshape(showMarks and regimeUp and isNormal, title="Regime UP",   style=shape.triangleup,   location=location.bottom, color=regUpClr, size=size.normal)
plotshape(showMarks and regimeUp and isLarge,  title="Regime UP",   style=shape.triangleup,   location=location.bottom, color=regUpClr, size=size.large)

// Regime DOWN
plotshape(showMarks and regimeDown and isTiny,   title="Regime DOWN", style=shape.triangledown, location=location.top, color=regDnClr, size=size.tiny)
plotshape(showMarks and regimeDown and isSmall,  title="Regime DOWN", style=shape.triangledown, location=location.top, color=regDnClr, size=size.small)
plotshape(showMarks and regimeDown and isNormal, title="Regime DOWN", style=shape.triangledown, location=location.top, color=regDnClr, size=size.normal)
plotshape(showMarks and regimeDown and isLarge,  title="Regime DOWN", style=shape.triangledown, location=location.top, color=regDnClr, size=size.large)

// Momentum UP
plotshape(showMarks and impulseUp and isTiny,   title="Momentum UP", style=shape.circle, location=location.bottom, color=impUpClr, size=size.tiny)
plotshape(showMarks and impulseUp and isSmall,  title="Momentum UP", style=shape.circle, location=location.bottom, color=impUpClr, size=size.small)
plotshape(showMarks and impulseUp and isNormal, title="Momentum UP", style=shape.circle, location=location.bottom, color=impUpClr, size=size.normal)
plotshape(showMarks and impulseUp and isLarge,  title="Momentum UP", style=shape.circle, location=location.bottom, color=impUpClr, size=size.large)

// Momentum DOWN
plotshape(showMarks and impulseDown and isTiny,   title="Momentum DOWN", style=shape.circle, location=location.top, color=impDnClr, size=size.tiny)
plotshape(showMarks and impulseDown and isSmall,  title="Momentum DOWN", style=shape.circle, location=location.top, color=impDnClr, size=size.small)
plotshape(showMarks and impulseDown and isNormal, title="Momentum DOWN", style=shape.circle, location=location.top, color=impDnClr, size=size.normal)
plotshape(showMarks and impulseDown and isLarge,  title="Momentum DOWN", style=shape.circle, location=location.top, color=impDnClr, size=size.large)

// Background shading
bgcolor(useBg ? (riskOn ? color.new(bgOnClr, transpBg) : riskOff ? color.new(bgOffClr, transpBg) : na) : na)

//========================= Divergences =========================
// Память предыдущих подтверждённых пивотов
var float prev_ph_price = na
var float prev_ph_ratio = na
var int   prev_ph_price_idx = na
var int   prev_ph_ratio_idx = na

var float prev_pl_price = na
var float prev_pl_ratio = na
var int   prev_pl_price_idx = na
var int   prev_pl_ratio_idx = na

// Пивоты для дивергенций считаем всегда (L = divLeftRight)
L = divLeftRight

ph_price = ta.pivothigh(total3, L, L)
pl_price = ta.pivotlow (total3, L, L)
ph_ratio = ta.pivothigh(ratio,  L, L)
pl_ratio = ta.pivotlow (ratio,  L, L)

ph_price_idx = not na(ph_price) ? bar_index - L : na
pl_price_idx = not na(pl_price) ? bar_index - L : na
ph_ratio_idx = not na(ph_ratio) ? bar_index - L : na
pl_ratio_idx = not na(pl_ratio) ? bar_index - L : na

if showDiv
    // ---- Bearish: price HH vs ratio LH
    if not na(ph_price) and not na(ph_ratio)
        if not na(prev_ph_price) and not na(prev_ph_ratio)
            isPriceHH = ph_price > prev_ph_price
            isRatioLH = ph_ratio < prev_ph_ratio
            if isPriceHH and isRatioLH
                _ = line.new(prev_ph_ratio_idx, prev_ph_ratio, ph_ratio_idx, ph_ratio,
                             xloc=xloc.bar_index, extend=extend.none, color=bearDivColor, width=divLineWidth)
                if showDivLabels
                    _ = label.new(ph_ratio_idx, ph_ratio, "Bear div",
                                  style=label.style_label_down, color=bearDivColor, textcolor=color.white)
        prev_ph_price     := ph_price
        prev_ph_price_idx := ph_price_idx
        prev_ph_ratio     := ph_ratio
        prev_ph_ratio_idx := ph_ratio_idx

    // ---- Bullish: price LL vs ratio HL
    if not na(pl_price) and not na(pl_ratio)
        if not na(prev_pl_price) and not na(prev_pl_ratio)
            isPriceLL = pl_price < prev_pl_price
            isRatioHL = pl_ratio > prev_pl_ratio
            if isPriceLL and isRatioHL
                _ = line.new(prev_pl_ratio_idx, prev_pl_ratio, pl_ratio_idx, pl_ratio,
                             xloc=xloc.bar_index, extend=extend.none, color=bullDivColor, width=divLineWidth)
                if showDivLabels
                    _ = label.new(pl_ratio_idx, pl_ratio, "Bull div",
                                  style=label.style_label_up, color=bullDivColor, textcolor=color.white)
        prev_pl_price     := pl_price
        prev_pl_price_idx := pl_price_idx
        prev_pl_ratio     := pl_ratio
        prev_pl_ratio_idx := pl_ratio_idx

//========================= RSI(Gaussian)  OB/OS on ratio pivots =========================
// Гауссово сглаживание RSI
f_gauss(src, N, sigma) =>
    float num = 0.0
    float den = 0.0
    for i = 0 to N-1
        w = math.exp(-math.pow(i, 2) / (2.0 * math.pow(sigma, 2)))
        num += nz(src[i]) * w
        den += w
    den != 0 ? num/den : na

rsiRaw = ta.rsi(close, krs_len)
rsiG   = f_gauss(rsiRaw, krs_kernelN, krs_sigma)

// Проверяем состояние RSI на баре подтверждённого пивота (смещение pivotLR)
obAtPivot = rsiG[pivotLR] >= krs_OB
osAtPivot = rsiG[pivotLR] <= krs_OS

// Пивоты НЕ по цене, а по ratio — чтобы метки жили в координатах панели индикатора
rph     = ta.pivothigh(ratio, pivotLR, pivotLR)
rpl     = ta.pivotlow (ratio, pivotLR, pivotLR)
rph_idx = not na(rph) ? bar_index - pivotLR : na
rpl_idx = not na(rpl) ? bar_index - pivotLR : na

// Отступ метки относительно ratio (в единицах ratio)
rsiMarkPad = input.float(0.25, "RSI mark offset (ratio units)")

// Размер меток берём из твоего выбора
_labSize = markSize=="tiny"   ? size.tiny   :
           markSize=="small"  ? size.small  :
           markSize=="normal" ? size.normal : size.large

// Рисуем метки строго на шкале ratio, поэтому масштаб панели не ломается
if krs_enable
    // Overbought — над максимумом ratio-пивота
    if not na(rph_idx) and obAtPivot
        label.new(rph_idx, rph + rsiMarkPad, "RSI OB", xloc.bar_index, yloc.price,
                  color=colOB, style=label.style_label_down, textcolor=color.white, size=_labSize)

    // Oversold — под минимумом ratio-пивота
    if not na(rpl_idx) and osAtPivot
        label.new(rpl_idx, rpl - rsiMarkPad, "RSI OS", xloc.bar_index, yloc.price,
                  color=colOS, style=label.style_label_up, textcolor=color.white, size=_labSize)

//========================= Alerts (global) =========================
enableDivAlerts   = input.bool(true, "Enable divergence alerts")
alertsOnlyOnClose = input.bool(true, "Alerts only on bar close")

f_ok(cond) =>
    (enableDivAlerts and (alertsOnlyOnClose ? barstate.isconfirmed : true)) and cond

const string sRegUP   = "Regime UP (Risk-ON)"
const string sRegDN   = "Regime DOWN (Risk-OFF)"
const string sImpUP   = "Momentum UP (Fast X)"
const string sImpDN   = "Momentum DOWN (Fast X)"
const string sBullDiv = "Bullish Divergence (Alt-Market Regime)"
const string sBearDiv = "Bearish Divergence (Alt-Market Regime)"
const string sOB      = "RSI(Gaussian) is Overbought on price pivot HIGH"
const string sOS      = "RSI(Gaussian) is Oversold on price pivot LOW"

// Базовые режимы/импульсы
alertcondition(regimeUp,    sRegUP, "Alt-Market Regime: RISK-ON (ratio crossed ABOVE Slow WMA)")
alertcondition(regimeDown,  sRegDN, "Alt-Market Regime: RISK-OFF (ratio crossed BELOW Slow WMA)")
alertcondition(impulseUp,   sImpUP, "Alt-Market momentum UP (ratio crossed ABOVE Fast WMA)")
alertcondition(impulseDown, sImpDN, "Alt-Market momentum DOWN (ratio crossed BELOW Fast WMA)")

// «Пульсы» дивергенций для алертов — теперь на правильных переменных
bullDivPulse = showDiv and not na(prev_pl_price) and not na(prev_pl_ratio) and not na(pl_price) and not na(pl_price_idx) and not na(pl_ratio) and (pl_price < prev_pl_price and pl_ratio > prev_pl_ratio)
bearDivPulse = showDiv and not na(prev_ph_price) and not na(prev_ph_ratio) and not na(ph_price) and not na(ph_price_idx) and not na(ph_ratio) and (ph_price > prev_ph_price and ph_ratio < prev_ph_ratio)

alertcondition(f_ok(bullDivPulse), sBullDiv, "Bullish divergence: TOTAL3 makes LL while Ratio makes HL.")
alertcondition(f_ok(bearDivPulse), sBearDiv, "Bearish divergence: TOTAL3 makes HH while Ratio makes LH.")
